<ResourceDictionary 
    x:Class="BookingClient.Resources.ComponentsStyle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <SolidColorBrush x:Key="ButtonBackground" Color="#ddd"/>
    <!--<Image x:Key="resourceImage" Source="visible.png"/>-->

    <Style x:Key="BaseButton" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Segoe UI Semilight"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="{StaticResource ButtonBackground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid
                        TextOptions.TextRenderingMode="ClearType"
                        TextOptions.TextFormattingMode="Ideal">

                        <Border
                            x:Name="PART_DefaultButton"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}">

                            <ContentPresenter 
                                x:Name="contentPresenter" 
                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                Content="{TemplateBinding Content}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="{TemplateBinding Padding}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="#f4f4f4"/>
                            <Setter Property="Foreground" Value="#838383"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="Button" x:Key="RegistrationButton" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Border.CornerRadius" Value="0,0,0,12" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightSkyBlue"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="DeepSkyBlue"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="CloseButton" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Border.CornerRadius" Value="0,0,12,0" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightPink"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#ff8597"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="AuthorizationButton" BasedOn="{StaticResource BaseButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="LightGreen"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="#68ee68"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="MenuButton" BasedOn="{StaticResource BaseButton}">
        <Setter Property="Height" Value="36"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Silver"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="Gray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="EyeToggleButton" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="Transparent">
                        <Path
                            x:Name="PATR_PathEye"
                            Height="20" 
                            Width="20"
                            Fill="Gray"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="PATR_PathEye" Property="Data" Value="{DynamicResource PathEyeOpen}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="PATR_PathEye" Property="Data" Value="{DynamicResource PathEyeClose}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PATR_PathEye" Property="Fill" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ReplayToggleButton" TargetType="ToggleButton">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border
                        Background="Transparent">
                        <Path
                            x:Name="PATR_PathEye"
                            Height="25" 
                            Width="25"
                            Fill="Gray"
                            Data="{DynamicResource PathReplay}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PATR_PathEye" Property="Fill" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Кнопка с изображением-->
    <Style x:Key="BaseImageButton" TargetType="Button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Width" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="Transparent">
                        <Path 
                            SnapsToDevicePixels ="True"
                            x:Name="PART_ButtonPath"
                            Fill="Black"
                            Width="30"
                            Height="30"
                            Data="{TemplateBinding Path.Data}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_ButtonPath" Property="Fill" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_ButtonPath" Property="Fill" Value="Silver"/>
                            <Setter Property="Background" Value="#838383"/>
                            <Setter Property="Cursor" Value=""/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RightArrowButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathArrowRight}"/>
    </Style>

    <Style x:Key="LeftArrowButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathArrowLeft}"/>
    </Style>

    <Style x:Key="ClosePageButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathClosePage}"/>
    </Style>

    <Style x:Key="AddButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathAdd}"/>
    </Style>

    <Style x:Key="CopyButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathCopy}"/>
    </Style>

    <Style x:Key="EditButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathEdit}"/>
    </Style>

    <Style x:Key="DeleteButton" TargetType="Button" BasedOn="{StaticResource BaseImageButton}">
        <Setter Property="Path.Data" Value="{DynamicResource PathDelete}"/>
    </Style>

    <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
    <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
    <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
    <SolidColorBrush x:Key="ResizeGripBackgroundColorBrush">#F0F0F0</SolidColorBrush>

    <Style x:Key="ResizableTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                        x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        SnapsToDevicePixels="True">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ScrollViewer 
                                x:Name="PART_ContentHost" 
                                Focusable="false" 
                                HorizontalScrollBarVisibility="Hidden" 
                                VerticalScrollBarVisibility="Hidden"/>

                            <Grid 
                                x:Name="resizeGripGrid"
                                Background="{StaticResource ResizeGripBackgroundColorBrush}"
                                Width="17"
                                Height="17"
                                Cursor="SizeNWSE"
                                HorizontalAlignment="Right"
                                Grid.Row="1"
                                PreviewMouseLeftButtonDown="resizeGripGrid_PreviewMouseLeftButtonDown"
                                PreviewMouseMove="resizeGripGrid_PreviewMouseMove"
                                PreviewMouseLeftButtonUp="resizeGripGrid_PreviewMouseLeftButtonUp">
                                <Line 
                                    Stroke="Gray"
                                    X1="0" Y1="18"
                                    X2="18" Y2="0"/>

                                <Line 
                                    Stroke="Gray"
                                    X1="5" Y1="18"
                                    X2="18" Y2="5"/>

                                <Line 
                                    Stroke="Gray"
                                    X1="10" Y1="18"
                                    X2="18" Y2="10"/>

                                <Line 
                                    Stroke="Gray"
                                    X1="15" Y1="18"
                                    X2="18" Y2="15"/>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>